
import { GoalData } from '@/types/goal';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';

interface GoalsListProps {
  goals: GoalData[];
  loading: boolean;
}

export function GoalsList({ goals, loading }: GoalsListProps) {
  const formatPace = (paceInSeconds: number): string => {
    const minutes = Math.floor(paceInSeconds / 60);
    const seconds = Math.floor(paceInSeconds % 60);
    return `${minutes}:${seconds.toString().padStart(2, '0')}`;
  };

  const formatDate = (date: Date | string): string => {
    return new Date(date).toLocaleDateString();
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>Your Goals</CardTitle>
        <CardDescription>
          Goals will be automatically generated when you complete a run
        </CardDescription>
      </CardHeader>
      <CardContent>
        {loading ? (
          <p className="text-muted-foreground">Loading goals...</p>
        ) : goals.length === 0 ? (
          <p className="text-muted-foreground">No goals yet</p>
        ) : (
          <ul className="space-y-2">
            {goals.map(goal => (
              <li key={goal.id} className="border rounded-md p-3">
                <div className="flex justify-between">
                  <span className="font-medium">Goal for {formatDate(goal.targetDate)}</span>
                  <span className={`text-sm px-2 py-1 rounded-full ${
                    goal.status === 'Active' 
                      ? 'bg-blue-100 text-blue-800' 
                      : goal.status === 'Completed'
                      ? 'bg-green-100 text-green-800'
                      : 'bg-gray-100 text-gray-800'
                  }`}>
                    {goal.status}
                  </span>
                </div>
                <div className="mt-2 grid grid-cols-2 gap-2">
                  <div>
                    <p className="text-xs text-muted-foreground">Target Distance</p>
                    <p>{goal.targetDistance.toFixed(2)} km</p>
                  </div>
                  <div>
                    <p className="text-xs text-muted-foreground">Target Pace</p>
                    <p>{formatPace(goal.targetPace)}/km</p>
                  </div>
                </div>
                {goal.autoGenerated && (
                  <p className="mt-2 text-xs text-muted-foreground italic">
                    Automatically generated
                  </p>
                )}
              </li>
            ))}
          </ul>
        )}
      </CardContent>
    </Card>
  );
}
